# Bots to ban via user agent
map $http_user_agent $limit_bots {
    default 0;
    ~*(AhrefsBot|Baiduspider|PaperLiBot) 1;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name weareferal.com;
    root "/home/admin/weareferal.com/web";

    ssl_certificate /etc/letsencrypt/live/weareferal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/weareferal.com/privkey.pem;

    include /etc/nginx/nginx-partials/ssl.conf;
    include /etc/nginx/nginx-partials/security.conf;
    include /etc/nginx/nginx-partials/compression.conf;
    include /etc/nginx/nginx-partials/redirects.conf;
    #include /etc/nginx/nginx-partials/expires.conf;
    #include /etc/nginx/nginx-partials/cache-busting.conf;

    index index.html index.htm index.php;

    charset utf-8;

    location / {
        try_files $uri/index.html $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log off;
    error_log  /var/log/nginx/weareferal.com-error.log error;

    # Craft locations
    location ^~ /admin {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ^~ /cpresources {
        try_files $uri $uri/ /index.php?$query_string;
    }

    error_page 404 /index.php?$query_string;

    # Site locations
    location ~ \.php$ {
        try_files $uri $uri/ /index.php?$query_string;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param HTTP_HOST weareferal.com;

        # Don't allow browser caching of dynamically generated content
        add_header Last-Modified $date_gmt;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        if_modified_since off;
        expires off;
        etag off;

        # Load security.conf from nginx-partials again, because add_header used in this location
        # block removes any already added headers https://nginx.org/en/docs/http/ngx_http_headers_module.html
        include /etc/nginx/nginx-partials/security.conf;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    # Deny locations
    location ~ /\.(?!well-known).* {
        deny all;
    }

    if ($limit_bots = 1) {
        return 403;
    }

    location ~ /\.ht {
        deny all;
    }
}

# Redirect http to https
server {
    listen 80;
    listen [::]:80;
    server_name .weareferal.com;
    return 301 https://weareferal.com$request_uri;
}

# Redirect www to non-www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.weareferal.com;
    ssl_certificate /etc/letsencrypt/live/weareferal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/weareferal.com/privkey.pem;
    return 301 https://weareferal.com$request_uri;
}